apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-code
  namespace: claude-code
  labels:
    app: claude-code
spec:
  replicas: 1
  selector:
    matchLabels:
      app: claude-code
  template:
    metadata:
      labels:
        app: claude-code
    spec:
      containers:
      # Main Claude Code container
      - name: claude-code
        image: claude-code:latest
        imagePullPolicy: IfNotPresent
        command: ["sleep", "infinity"]
        volumeMounts:
        - name: config-volume
          mountPath: /home/claude/.config/claude-code
        - name: workspace-volume
          mountPath: /home/claude/workspace
        # Nexus-specific mounts (will fail gracefully if ConfigMap doesn't exist)
        - name: cargo-dir
          mountPath: /home/claude/.cargo
        - name: cargo-config
          mountPath: /home/claude/.cargo/config.toml
          subPath: cargo-config.toml
        - name: pip-config
          mountPath: /home/claude/.config/pip/pip.conf
          subPath: pip.conf
        - name: npm-config
          mountPath: /home/claude/.npmrc
          subPath: npmrc
        env:
        # These environment variables will be populated from ConfigMap if it exists
        - name: PIP_INDEX_URL
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: PIP_INDEX_URL
              optional: true
        - name: PIP_TRUSTED_HOST
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: PIP_TRUSTED_HOST
              optional: true
        - name: NPM_CONFIG_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: NPM_CONFIG_REGISTRY
              optional: true
        - name: GOPROXY
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: GOPROXY
              optional: true
        - name: CARGO_HOME
          value: "/home/claude/.cargo"
        - name: CARGO_NET_GIT_FETCH_WITH_CLI
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: CARGO_NET_GIT_FETCH_WITH_CLI
              optional: true
        - name: CARGO_HTTP_CHECK_REVOKE
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: CARGO_HTTP_CHECK_REVOKE
              optional: true
        - name: CARGO_HTTP_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: CARGO_HTTP_TIMEOUT
              optional: true
        - name: HTTP_PROXY
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: HTTP_PROXY
              optional: true
        - name: HTTPS_PROXY
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: HTTPS_PROXY
              optional: true
        - name: NO_PROXY
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: NO_PROXY
              optional: true
        - name: no_proxy
          valueFrom:
            configMapKeyRef:
              name: nexus-env-config
              key: no_proxy
              optional: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      
      # Filebrowser sidecar for easy file management
      - name: filebrowser
        image: filebrowser/filebrowser:latest
        ports:
        - containerPort: 8090
          name: filebrowser
        volumeMounts:
        - name: workspace-volume
          mountPath: /srv
        - name: filebrowser-config
          mountPath: /config
        - name: filebrowser-db
          mountPath: /database
        env:
        - name: FB_DATABASE
          value: /database/filebrowser.db
        - name: FB_CONFIG
          value: /config/settings.json
        - name: FB_ROOT
          value: /srv
        - name: FB_LOG
          value: stdout
        - name: FB_PORT
          value: "8090"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      
      volumes:
      - name: config-volume
        persistentVolumeClaim:
          claimName: claude-code-config-pvc
      - name: workspace-volume
        persistentVolumeClaim:
          claimName: claude-code-workspace-pvc
      - name: cargo-dir
        emptyDir: {}
      - name: filebrowser-config
        configMap:
          name: filebrowser-config
      - name: filebrowser-db
        emptyDir: {}
      # Nexus-specific config volumes (optional: true means they won't fail if ConfigMap doesn't exist)
      - name: pip-config
        configMap:
          name: nexus-proxy-config
          items:
          - key: pip.conf
            path: pip.conf
          defaultMode: 0644
          optional: true
      - name: npm-config
        configMap:
          name: nexus-proxy-config
          items:
          - key: npmrc
            path: npmrc
          defaultMode: 0644
          optional: true
      - name: cargo-config
        configMap:
          name: nexus-proxy-config
          items:
          - key: cargo-config.toml
            path: cargo-config.toml
          defaultMode: 0644
          optional: true
---
# Service to expose Filebrowser
apiVersion: v1
kind: Service
metadata:
  name: claude-code
  namespace: claude-code
spec:
  selector:
    app: claude-code
  ports:
  - name: filebrowser
    port: 8090
    targetPort: 8090
  type: ClusterIP
---
# ConfigMap for Filebrowser settings
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebrowser-config
  namespace: claude-code
data:
  settings.json: |
    {
      "port": 8090,
      "baseURL": "",
      "address": "0.0.0.0",
      "log": "stdout",
      "database": "/database/filebrowser.db",
      "root": "/srv",
      "username": "admin",
      "password": "admin",
      "branding": {
        "name": "Claude Code Workspace",
        "disableExternal": false,
        "color": "#2979ff"
      },
      "authMethod": "password",
      "commands": {
        "after_save": [],
        "before_save": []
      },
      "shell": ["/bin/bash", "-c"],
      "allowEdit": true,
      "allowNew": true,
      "disablePreviewResize": false,
      "disableExec": false,
      "disableUsedPercentage": false,
      "hideDotfiles": false
    }
