# Language installation configurations
# Format: LANGUAGE_ID|DISPLAY_NAME|GROUP|REQUIRES|INSTALLATION_COMMANDS
# GROUP: Identifies the category (mutually exclusive groups end with -version)
# REQUIRES: Comma-separated list of required groups (e.g., scala requires java-version)

# Languages (alphabetically organized)

# Elixir
ELIXIR|Elixir (with Erlang)|elixir-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y erlang elixir && rm -rf /var/lib/apt/lists/*

# Go versions (mutually exclusive)
GO_1_21|Go 1.21|go-version||RUN ARCH=$(dpkg --print-architecture) && GO_ARCH=${ARCH} && if [ "${ARCH}" = "arm64" ]; then GO_ARCH="arm64"; elif [ "${ARCH}" = "amd64" ]; then GO_ARCH="amd64"; fi && wget -q https://go.dev/dl/go1.21.6.linux-${GO_ARCH}.tar.gz && tar -C /usr/local -xzf go1.21.6.linux-${GO_ARCH}.tar.gz && rm go1.21.6.linux-${GO_ARCH}.tar.gz && echo 'export PATH=/usr/local/go/bin:$PATH' >> /etc/profile.d/go.sh && if [ -n "$GOPROXY" ]; then echo "export GOPROXY=$GOPROXY" >> /etc/profile.d/go.sh && echo "export GOPRIVATE=" >> /etc/profile.d/go.sh && echo "export GONOSUMDB=" >> /etc/profile.d/go.sh; fi
GO_1_22|Go 1.22|go-version||RUN ARCH=$(dpkg --print-architecture) && GO_ARCH=${ARCH} && if [ "${ARCH}" = "arm64" ]; then GO_ARCH="arm64"; elif [ "${ARCH}" = "amd64" ]; then GO_ARCH="amd64"; fi && wget -q https://go.dev/dl/go1.22.0.linux-${GO_ARCH}.tar.gz && tar -C /usr/local -xzf go1.22.0.linux-${GO_ARCH}.tar.gz && rm go1.22.0.linux-${GO_ARCH}.tar.gz && echo 'export PATH=/usr/local/go/bin:$PATH' >> /etc/profile.d/go.sh && if [ -n "$GOPROXY" ]; then echo "export GOPROXY=$GOPROXY" >> /etc/profile.d/go.sh && echo "export GOPRIVATE=" >> /etc/profile.d/go.sh && echo "export GONOSUMDB=" >> /etc/profile.d/go.sh; fi

# Java versions (mutually exclusive)
JAVA_11_OPENJDK|Java 11 (OpenJDK)|java-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y openjdk-11-jdk && rm -rf /var/lib/apt/lists/*
JAVA_11_ADOPTIUM|Java 11 (Eclipse Adoptium)|java-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y wget apt-transport-https gnupg && mkdir -p /etc/apt/keyrings && wget -qO - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc > /dev/null && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] ${NEXUS_APT_URL}/repository/adoptium-apt-proxy $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; else echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; fi && apt-get update && apt-get install -y temurin-11-jdk && rm -rf /var/lib/apt/lists/*
JAVA_17_OPENJDK|Java 17 (OpenJDK)|java-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y openjdk-17-jdk && rm -rf /var/lib/apt/lists/*
JAVA_17_ADOPTIUM|Java 17 (Eclipse Adoptium)|java-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y wget apt-transport-https gnupg && mkdir -p /etc/apt/keyrings && wget -qO - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc > /dev/null && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] ${NEXUS_APT_URL}/repository/adoptium-apt-proxy $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; else echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; fi && apt-get update && apt-get install -y temurin-17-jdk && rm -rf /var/lib/apt/lists/*
JAVA_21_OPENJDK|Java 21 (OpenJDK)|java-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y openjdk-21-jdk && rm -rf /var/lib/apt/lists/*
JAVA_21_ADOPTIUM|Java 21 (Eclipse Adoptium)|java-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y wget apt-transport-https gnupg && mkdir -p /etc/apt/keyrings && wget -qO - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc > /dev/null && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] ${NEXUS_APT_URL}/repository/adoptium-apt-proxy $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; else echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; fi && apt-get update && apt-get install -y temurin-21-jdk && rm -rf /var/lib/apt/lists/*

# Kotlin
KOTLIN|Kotlin|kotlin-version|java-version|RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y zip unzip && rm -rf /var/lib/apt/lists/* && cd /tmp && wget https://github.com/JetBrains/kotlin/releases/download/v1.9.22/kotlin-compiler-1.9.22.zip && unzip kotlin-compiler-1.9.22.zip && mv kotlinc /opt/kotlin && rm kotlin-compiler-1.9.22.zip && echo 'export PATH=/opt/kotlin/bin:$PATH' >> /etc/profile.d/kotlin.sh

# Python versions (mutually exclusive)
PYTHON_DEFAULT|Python 3.10 (Ubuntu Default)|python-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y python3 python3-venv python3-pip python3-dev && rm -rf /var/lib/apt/lists/* && ln -sf /usr/bin/python3 /usr/bin/python
PYTHON_3_11|Python 3.11 (Official)|python-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y python3.11 python3.11-venv python3-pip && rm -rf /var/lib/apt/lists/* && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 && update-alternatives --set python3 /usr/bin/python3.11 && ln -sf /usr/bin/python3.11 /usr/bin/python

# Ruby versions (mutually exclusive)
RUBY_SYSTEM|Ruby (Ubuntu Package)|ruby-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y ruby-full ruby-dev build-essential && rm -rf /var/lib/apt/lists/* && gem install bundler && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then gem sources --remove https://rubygems.org/ && gem sources --add ${NEXUS_APT_URL}/repository/rubygems-proxy/ && echo "gem: --source ${NEXUS_APT_URL}/repository/rubygems-proxy/" > /etc/skel/.gemrc; fi && mkdir -p /etc/skel/.bundle && echo '---' > /etc/skel/.bundle/config && echo 'BUNDLE_PATH: "~/.bundle"' >> /etc/skel/.bundle/config && echo 'BUNDLE_BIN: "~/.local/bin"' >> /etc/skel/.bundle/config && echo '' >> /etc/skel/.bashrc && echo '# Ruby gem paths' >> /etc/skel/.bashrc && echo 'export GEM_HOME="$HOME/.bundle"' >> /etc/skel/.bashrc && echo 'export PATH="$HOME/.local/bin:$HOME/.bundle/bin:$PATH"' >> /etc/skel/.bashrc
RUBY_3_3|Ruby 3.3 (rbenv)|ruby-version||RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y rbenv ruby-build && rm -rf /var/lib/apt/lists/* && rbenv install 3.3.0 && rbenv global 3.3.0 && gem install bundler && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then gem sources --remove https://rubygems.org/ && gem sources --add ${NEXUS_APT_URL}/repository/rubygems-proxy/ && echo "gem: --source ${NEXUS_APT_URL}/repository/rubygems-proxy/" > /etc/skel/.gemrc; fi && mkdir -p /etc/skel/.bundle && echo '---' > /etc/skel/.bundle/config && echo 'BUNDLE_PATH: "~/.bundle"' >> /etc/skel/.bundle/config && echo 'BUNDLE_BIN: "~/.local/bin"' >> /etc/skel/.bundle/config && echo '' >> /etc/skel/.bashrc && echo '# Ruby gem paths' >> /etc/skel/.bashrc && echo 'export GEM_HOME="$HOME/.bundle"' >> /etc/skel/.bashrc && echo 'export PATH="$HOME/.local/bin:$HOME/.bundle/bin:$PATH"' >> /etc/skel/.bashrc

# Rust versions (mutually exclusive)
RUST_STABLE|Rust (Stable Channel)|rust-version||RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | RUSTUP_HOME=/opt/rust CARGO_HOME=/opt/rust sh -s -- -y --no-modify-path --default-toolchain stable && chmod -R 755 /opt/rust && echo 'export PATH=/opt/rust/bin:$PATH' >> /etc/profile.d/rust.sh && echo 'export RUSTUP_HOME=/opt/rust' >> /etc/profile.d/rust.sh && echo 'export CARGO_HOME=$HOME/.cargo' >> /etc/profile.d/rust.sh && ln -s /opt/rust/bin/* /usr/local/bin/ && /opt/rust/bin/rustup default stable && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then mkdir -p /etc/skel/.cargo && echo '[source.crates-io]' > /etc/skel/.cargo/config.toml && echo 'replace-with = "nexus"' >> /etc/skel/.cargo/config.toml && echo '' >> /etc/skel/.cargo/config.toml && echo '[source.nexus]' >> /etc/skel/.cargo/config.toml && echo "registry = \"sparse+${NEXUS_APT_URL}/repository/cargo-proxy/\"" >> /etc/skel/.cargo/config.toml; fi
RUST_NIGHTLY|Rust (Nightly Channel)|rust-version||RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | RUSTUP_HOME=/opt/rust CARGO_HOME=/opt/rust sh -s -- -y --no-modify-path --default-toolchain nightly && chmod -R 755 /opt/rust && echo 'export PATH=/opt/rust/bin:$PATH' >> /etc/profile.d/rust.sh && echo 'export RUSTUP_HOME=/opt/rust' >> /etc/profile.d/rust.sh && echo 'export CARGO_HOME=$HOME/.cargo' >> /etc/profile.d/rust.sh && ln -s /opt/rust/bin/* /usr/local/bin/ && /opt/rust/bin/rustup default nightly && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then mkdir -p /etc/skel/.cargo && echo '[source.crates-io]' > /etc/skel/.cargo/config.toml && echo 'replace-with = "nexus"' >> /etc/skel/.cargo/config.toml && echo '' >> /etc/skel/.cargo/config.toml && echo '[source.nexus]' >> /etc/skel/.cargo/config.toml && echo "registry = \"sparse+${NEXUS_APT_URL}/repository/cargo-proxy/\"" >> /etc/skel/.cargo/config.toml; fi

# Scala versions (mutually exclusive, require Java)
SCALA_2_13|Scala 2.13|scala-version|java-version|RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y wget && wget https://downloads.lightbend.com/scala/2.13.12/scala-2.13.12.deb && dpkg -i scala-2.13.12.deb && rm scala-2.13.12.deb && apt-get install -f -y && rm -rf /var/lib/apt/lists/*
SCALA_3|Scala 3|scala-version|java-version|RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y wget unzip && rm -rf /var/lib/apt/lists/* && cd /tmp && wget https://github.com/lampepfl/dotty/releases/download/3.3.1/scala3-3.3.1.zip && unzip scala3-3.3.1.zip && mv scala3-3.3.1 /opt/scala3 && rm scala3-3.3.1.zip && echo 'export PATH=/opt/scala3/bin:$PATH' >> /etc/profile.d/scala3.sh

# TypeScript
TYPESCRIPT|TypeScript|typescript-version||RUN npm install -g typescript ts-node @types/node && echo "✓ TypeScript installed globally"

# Dev Tools (alphabetically organized)

# Conda/Miniconda
CONDA|Conda/Miniconda|dev-tools||RUN ARCH=$(uname -m) && if [ "$ARCH" = "x86_64" ]; then MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"; elif [ "$ARCH" = "aarch64" ]; then MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh"; else echo "Unsupported architecture: $ARCH" && exit 1; fi && wget --quiet "$MINICONDA_URL" -O ~/miniconda.sh && /bin/bash ~/miniconda.sh -b -p /opt/conda && rm ~/miniconda.sh && /opt/conda/bin/conda clean -a -y && echo 'export PATH=/opt/conda/bin:$PATH' >> /etc/profile.d/conda.sh && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then echo "channels:" > /root/.condarc && echo "  - ${NEXUS_APT_URL}/repository/conda-forge-proxy/" >> /root/.condarc && echo "  - ${NEXUS_APT_URL}/repository/conda-proxy/" >> /root/.condarc && echo "ssl_verify: false" >> /root/.condarc && echo "channel_priority: strict" >> /root/.condarc && echo "show_channel_urls: true" >> /root/.condarc && echo "default_channels: []" >> /root/.condarc && cp /root/.condarc /opt/conda/.condarc; fi && echo 'if [ -f /opt/conda/bin/conda ]; then eval "$(/opt/conda/bin/conda shell.bash hook)"; fi' >> /etc/skel/.bashrc

# Gradle (Java build tool)
GRADLE|Gradle (Java build tool)|dev-tools|java-version|RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y unzip && rm -rf /var/lib/apt/lists/* && ARCH=$(dpkg --print-architecture) && GRADLE_VERSION="8.5" && wget -q https://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip -O /tmp/gradle.zip && unzip -q /tmp/gradle.zip -d /opt && rm /tmp/gradle.zip && mv /opt/gradle-${GRADLE_VERSION} /opt/gradle && echo 'export PATH=/opt/gradle/bin:$PATH' >> /etc/profile.d/gradle.sh && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then mkdir -p /etc/skel/.gradle && echo "allprojects {" > /etc/skel/.gradle/init.gradle && echo "    repositories {" >> /etc/skel/.gradle/init.gradle && echo "        maven {" >> /etc/skel/.gradle/init.gradle && echo "            url \"${NEXUS_APT_URL}/repository/maven-public/\"" >> /etc/skel/.gradle/init.gradle && echo "            allowInsecureProtocol = true" >> /etc/skel/.gradle/init.gradle && echo "        }" >> /etc/skel/.gradle/init.gradle && echo "    }" >> /etc/skel/.gradle/init.gradle && echo "}" >> /etc/skel/.gradle/init.gradle && echo "settingsEvaluated { settings ->" >> /etc/skel/.gradle/init.gradle && echo "    settings.pluginManagement {" >> /etc/skel/.gradle/init.gradle && echo "        repositories {" >> /etc/skel/.gradle/init.gradle && echo "            maven {" >> /etc/skel/.gradle/init.gradle && echo "                url \"${NEXUS_APT_URL}/repository/maven-public/\"" >> /etc/skel/.gradle/init.gradle && echo "                allowInsecureProtocol = true" >> /etc/skel/.gradle/init.gradle && echo "            }" >> /etc/skel/.gradle/init.gradle && echo "        }" >> /etc/skel/.gradle/init.gradle && echo "    }" >> /etc/skel/.gradle/init.gradle && echo "}" >> /etc/skel/.gradle/init.gradle; fi

# Maven (Java build tool)
MAVEN|Maven (Java build tool)|dev-tools|java-version|RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y maven && rm -rf /var/lib/apt/lists/* && mkdir -p /home/claude/.m2

# SBT (Scala build tool)
SBT|SBT (Scala build tool)|dev-tools|java-version|RUN export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y apt-transport-https curl gnupg && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then echo "deb ${NEXUS_APT_URL}/repository/sbt-apt-proxy/ /" | tee /etc/apt/sources.list.d/sbt.list; else echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | tee /etc/apt/sources.list.d/sbt.list && echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | tee /etc/apt/sources.list.d/sbt_old.list; fi && curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | apt-key add && apt-get update && apt-get install -y sbt && rm -rf /var/lib/apt/lists/* && if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then mkdir -p /etc/skel/.sbt && echo "[repositories]" > /etc/skel/.sbt/repositories && echo "local" >> /etc/skel/.sbt/repositories && echo "nexus: ${NEXUS_APT_URL}/repository/maven-public/" >> /etc/skel/.sbt/repositories && echo "" >> /etc/skel/.bashrc && echo "# Coursier configuration for Nexus" >> /etc/skel/.bashrc && echo "export COURSIER_REPOSITORIES=\"${NEXUS_APT_URL}/repository/maven-public/\"" >> /etc/skel/.bashrc && echo "# Force SBT to use only configured repositories" >> /etc/skel/.bashrc && echo "export SBT_OPTS=\"-Dsbt.override.build.repos=true\"" >> /etc/skel/.bashrc; fi
