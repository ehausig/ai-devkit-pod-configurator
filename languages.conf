# Language installation configurations
# Format: LANGUAGE_NAME|DISPLAY_NAME|INSTALLATION_COMMANDS

# Python versions
# Note: Ubuntu 22.04 comes with Python 3.10 by default
PYTHON_3_9|Python 3.9|RUN apt-get update && apt-get install -y software-properties-common python3-distutils && add-apt-repository ppa:deadsnakes/ppa && apt-get update && apt-get install -y python3.9 python3.9-venv python3.9-dev python3.9-distutils && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.9 && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1 && update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 && update-alternatives --install /usr/bin/pip pip /usr/local/bin/pip3.9 1
PYTHON_3_11|Python 3.11|RUN apt-get update && apt-get install -y software-properties-common python3-distutils && add-apt-repository ppa:deadsnakes/ppa && apt-get update && apt-get install -y python3.11 python3.11-venv python3.11-dev python3.11-distutils && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11 && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 && update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 && update-alternatives --install /usr/bin/pip pip /usr/local/bin/pip3.11 1
PYTHON_3_12|Python 3.12|RUN apt-get update && apt-get install -y software-properties-common python3-distutils && add-apt-repository ppa:deadsnakes/ppa && apt-get update && apt-get install -y python3.12 python3.12-venv python3.12-dev && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12 && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1 && update-alternatives --install /usr/bin/python python /usr/bin/python3.12 1 && update-alternatives --install /usr/bin/pip pip /usr/local/bin/pip3.12 1

# Rust
RUST_LATEST|Rust (latest)|RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | RUSTUP_HOME=/opt/rust CARGO_HOME=/opt/rust sh -s -- -y --no-modify-path --default-toolchain stable && chmod -R 755 /opt/rust && echo 'export PATH=/opt/rust/bin:$PATH' >> /etc/profile.d/rust.sh && echo 'export RUSTUP_HOME=/opt/rust' >> /etc/profile.d/rust.sh && echo 'export CARGO_HOME=$HOME/.cargo' >> /etc/profile.d/rust.sh && ln -s /opt/rust/bin/* /usr/local/bin/ && /opt/rust/bin/rustup default stable
RUST_NIGHTLY|Rust (nightly)|RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | RUSTUP_HOME=/opt/rust CARGO_HOME=/opt/rust sh -s -- -y --no-modify-path --default-toolchain nightly && chmod -R 755 /opt/rust && echo 'export PATH=/opt/rust/bin:$PATH' >> /etc/profile.d/rust.sh && echo 'export RUSTUP_HOME=/opt/rust' >> /etc/profile.d/rust.sh && echo 'export CARGO_HOME=$HOME/.cargo' >> /etc/profile.d/rust.sh && ln -s /opt/rust/bin/* /usr/local/bin/ && /opt/rust/bin/rustup default nightly

# Go versions
GO_1_21|Go 1.21|RUN wget -q https://go.dev/dl/go1.21.linux-arm64.tar.gz && tar -C /usr/local -xzf go1.21.linux-arm64.tar.gz && rm go1.21.linux-arm64.tar.gz && echo 'export PATH=$PATH:/usr/local/go/bin' >> /etc/profile.d/go.sh
GO_1_22|Go 1.22|RUN wget -q https://go.dev/dl/go1.22.linux-arm64.tar.gz && tar -C /usr/local -xzf go1.22.linux-arm64.tar.gz && rm go1.22.linux-arm64.tar.gz && echo 'export PATH=$PATH:/usr/local/go/bin' >> /etc/profile.d/go.sh

# Ruby versions
RUBY_3_2|Ruby 3.2|RUN apt-get update && apt-get install -y ruby-full ruby-dev build-essential
RUBY_3_3|Ruby 3.3 (via rbenv)|RUN apt-get update && apt-get install -y rbenv ruby-build && rbenv install 3.3.0 && rbenv global 3.3.0

# Java versions
JAVA_11|Java 11 (OpenJDK)|RUN apt-get update && apt-get install -y openjdk-11-jdk
JAVA_17|Java 17 (OpenJDK)|RUN apt-get update && apt-get install -y openjdk-17-jdk
JAVA_21|Java 21 (OpenJDK)|RUN apt-get update && apt-get install -y openjdk-21-jdk

# .NET
DOTNET_6|.NET 6.0|RUN wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb && apt-get update && apt-get install -y dotnet-sdk-6.0
DOTNET_8|.NET 8.0|RUN wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb && apt-get update && apt-get install -y dotnet-sdk-8.0

# PHP
PHP_8_2|PHP 8.2|RUN apt-get update && apt-get install -y php8.2 php8.2-cli php8.2-common php8.2-curl php8.2-mbstring php8.2-xml php8.2-zip
PHP_8_3|PHP 8.3|RUN apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:ondrej/php && apt-get update && apt-get install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-mbstring php8.3-xml php8.3-zip

# Other languages
ELIXIR_LATEST|Elixir (latest with Erlang)|RUN apt-get update && apt-get install -y erlang elixir
KOTLIN_LATEST|Kotlin (latest)|RUN apt-get update && apt-get install -y zip unzip && cd /tmp && wget https://github.com/JetBrains/kotlin/releases/download/v1.9.22/kotlin-compiler-1.9.22.zip && unzip kotlin-compiler-1.9.22.zip && mv kotlinc /opt/kotlin && rm kotlin-compiler-1.9.22.zip && echo 'export PATH=$PATH:/opt/kotlin/bin' >> /etc/profile.d/kotlin.sh
SWIFT_5_9|Swift 5.9|RUN apt-get update && apt-get install -y binutils git gnupg2 libc6-dev libcurl4-openssl-dev libedit2 libgcc-9-dev libpython3.8 libsqlite3-0 libstdc++-9-dev libxml2-dev libz3-dev pkg-config tzdata unzip zlib1g-dev && wget https://download.swift.org/swift-5.9-release/ubuntu2204-aarch64/swift-5.9-RELEASE/swift-5.9-RELEASE-ubuntu22.04-aarch64.tar.gz && tar xzf swift-5.9-RELEASE-ubuntu22.04-aarch64.tar.gz && mv swift-5.9-RELEASE-ubuntu22.04-aarch64 /usr/share/swift && echo 'export PATH=/usr/share/swift/usr/bin:$PATH' >> /etc/profile.d/swift.sh && rm swift-5.9-RELEASE-ubuntu22.04-aarch64.tar.gz
