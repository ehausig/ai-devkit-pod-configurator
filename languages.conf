# Language installation configurations
# Format: LANGUAGE_ID|DISPLAY_NAME|GROUP|REQUIRES|INSTALLATION_COMMANDS
# GROUP: Identifies the category (mutually exclusive groups end with -version)
# REQUIRES: Comma-separated list of required groups (e.g., scala requires java-version)

# Python versions (mutually exclusive)
PYTHON_3_9|Python 3.9|python-version||RUN apt-get update && apt-get install -y software-properties-common python3-distutils && add-apt-repository ppa:deadsnakes/ppa && apt-get update && apt-get install -y python3.9 python3.9-venv python3.9-dev python3.9-distutils && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.9 && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1 && update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 && update-alternatives --install /usr/bin/pip pip /usr/local/bin/pip3.9 1
PYTHON_3_11|Python 3.11|python-version||RUN apt-get update && apt-get install -y software-properties-common python3-distutils && add-apt-repository ppa:deadsnakes/ppa && apt-get update && apt-get install -y python3.11 python3.11-venv python3.11-dev python3.11-distutils && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11 && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1 && update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 && update-alternatives --install /usr/bin/pip pip /usr/local/bin/pip3.11 1
PYTHON_3_12|Python 3.12|python-version||RUN apt-get update && apt-get install -y software-properties-common python3-distutils && add-apt-repository ppa:deadsnakes/ppa && apt-get update && apt-get install -y python3.12 python3.12-venv python3.12-dev && curl -sS https://bootstrap.pypa.io/get-pip.py | python3.12 && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1 && update-alternatives --install /usr/bin/python python /usr/bin/python3.12 1 && update-alternatives --install /usr/bin/pip pip /usr/local/bin/pip3.12 1

# Python tools (can be combined)
POETRY|Poetry (Python package manager)|python-tools|python-version|RUN curl -sSL https://install.python-poetry.org | python3 -
PIPENV|Pipenv (Python virtualenv manager)|python-tools|python-version|RUN pip install --user pipenv && echo 'export PATH="$HOME/.local/bin:$PATH"' >> /home/claude/.bashrc

# Rust versions (mutually exclusive)
RUST_STABLE|Rust (stable)|rust-version||RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | RUSTUP_HOME=/opt/rust CARGO_HOME=/opt/rust sh -s -- -y --no-modify-path --default-toolchain stable && chmod -R 755 /opt/rust && echo 'export PATH=/opt/rust/bin:$PATH' >> /etc/profile.d/rust.sh && echo 'export RUSTUP_HOME=/opt/rust' >> /etc/profile.d/rust.sh && echo 'export CARGO_HOME=$HOME/.cargo' >> /etc/profile.d/rust.sh && ln -s /opt/rust/bin/* /usr/local/bin/ && /opt/rust/bin/rustup default stable
RUST_NIGHTLY|Rust (nightly)|rust-version||RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | RUSTUP_HOME=/opt/rust CARGO_HOME=/opt/rust sh -s -- -y --no-modify-path --default-toolchain nightly && chmod -R 755 /opt/rust && echo 'export PATH=/opt/rust/bin:$PATH' >> /etc/profile.d/rust.sh && echo 'export RUSTUP_HOME=/opt/rust' >> /etc/profile.d/rust.sh && echo 'export CARGO_HOME=$HOME/.cargo' >> /etc/profile.d/rust.sh && ln -s /opt/rust/bin/* /usr/local/bin/ && /opt/rust/bin/rustup default nightly

# Go versions (mutually exclusive)
GO_1_21|Go 1.21|go-version||RUN wget -q https://go.dev/dl/go1.21.linux-arm64.tar.gz && tar -C /usr/local -xzf go1.21.linux-arm64.tar.gz && rm go1.21.linux-arm64.tar.gz && echo 'export PATH=$PATH:/usr/local/go/bin' >> /etc/profile.d/go.sh
GO_1_22|Go 1.22|go-version||RUN wget -q https://go.dev/dl/go1.22.linux-arm64.tar.gz && tar -C /usr/local -xzf go1.22.linux-arm64.tar.gz && rm go1.22.linux-arm64.tar.gz && echo 'export PATH=$PATH:/usr/local/go/bin' >> /etc/profile.d/go.sh

# Ruby versions (mutually exclusive)
RUBY_3_2|Ruby 3.2|ruby-version||RUN apt-get update && apt-get install -y ruby-full ruby-dev build-essential
RUBY_3_3|Ruby 3.3 (via rbenv)|ruby-version||RUN apt-get update && apt-get install -y rbenv ruby-build && rbenv install 3.3.0 && rbenv global 3.3.0

# Java versions (mutually exclusive)
JAVA_11|Java 11 (Eclipse Adoptium)|java-version||RUN apt-get update && apt-get install -y wget apt-transport-https && mkdir -p /etc/apt/keyrings && wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc && echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list && apt-get update && apt-get install -y temurin-11-jdk
JAVA_17|Java 17 (Eclipse Adoptium)|java-version||RUN apt-get update && apt-get install -y wget apt-transport-https && mkdir -p /etc/apt/keyrings && wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc && echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list && apt-get update && apt-get install -y temurin-17-jdk
JAVA_21|Java 21 (Eclipse Adoptium)|java-version||RUN apt-get update && apt-get install -y wget apt-transport-https && mkdir -p /etc/apt/keyrings && wget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc && echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list && apt-get update && apt-get install -y temurin-21-jdk

# Java build tools (can be combined, require Java)
MAVEN|Maven (Java build tool)|java-tools|java-version|RUN apt-get update && apt-get install -y maven
GRADLE|Gradle (Java build tool)|java-tools|java-version|RUN wget https://services.gradle.org/distributions/gradle-8.5-bin.zip && unzip -d /opt gradle-8.5-bin.zip && rm gradle-8.5-bin.zip && echo 'export PATH=$PATH:/opt/gradle-8.5/bin' >> /etc/profile.d/gradle.sh
SBT|SBT (Scala build tool)|java-tools|java-version|RUN apt-get update && apt-get install -y apt-transport-https curl gnupg && echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | tee /etc/apt/sources.list.d/sbt.list && echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | tee /etc/apt/sources.list.d/sbt_old.list && curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | apt-key add && apt-get update && apt-get install -y sbt

# .NET versions (mutually exclusive)
DOTNET_6|.NET 6.0|dotnet-version||RUN wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb && apt-get update && apt-get install -y dotnet-sdk-6.0
DOTNET_8|.NET 8.0|dotnet-version||RUN wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb && apt-get update && apt-get install -y dotnet-sdk-8.0

# PHP versions (mutually exclusive)
PHP_8_2|PHP 8.2|php-version||RUN apt-get update && apt-get install -y php8.2 php8.2-cli php8.2-common php8.2-curl php8.2-mbstring php8.2-xml php8.2-zip
PHP_8_3|PHP 8.3|php-version||RUN apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:ondrej/php && apt-get update && apt-get install -y php8.3 php8.3-cli php8.3-common php8.3-curl php8.3-mbstring php8.3-xml php8.3-zip

# PHP tools
COMPOSER|Composer (PHP package manager)|php-tools|php-version|RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Node.js tools (Node.js is already in base image)
YARN|Yarn (Node.js package manager)|node-tools||RUN npm install -g yarn
PNPM|pnpm (Node.js package manager)|node-tools||RUN npm install -g pnpm

# Standalone languages
ELIXIR|Elixir (with Erlang)|standalone||RUN apt-get update && apt-get install -y erlang elixir
KOTLIN|Kotlin|standalone|java-version|RUN apt-get update && apt-get install -y zip unzip && cd /tmp && wget https://github.com/JetBrains/kotlin/releases/download/v1.9.22/kotlin-compiler-1.9.22.zip && unzip kotlin-compiler-1.9.22.zip && mv kotlinc /opt/kotlin && rm kotlin-compiler-1.9.22.zip && echo 'export PATH=$PATH:/opt/kotlin/bin' >> /etc/profile.d/kotlin.sh
SWIFT_5_9|Swift 5.9|standalone||RUN apt-get update && apt-get install -y binutils git gnupg2 libc6-dev libcurl4-openssl-dev libedit2 libgcc-9-dev libpython3.8 libsqlite3-0 libstdc++-9-dev libxml2-dev libz3-dev pkg-config tzdata unzip zlib1g-dev && wget https://download.swift.org/swift-5.9-release/ubuntu2204-aarch64/swift-5.9-RELEASE/swift-5.9-RELEASE-ubuntu22.04-aarch64.tar.gz && tar xzf swift-5.9-RELEASE-ubuntu22.04-aarch64.tar.gz && mv swift-5.9-RELEASE-ubuntu22.04-aarch64 /usr/share/swift && echo 'export PATH=/usr/share/swift/usr/bin:$PATH' >> /etc/profile.d/swift.sh && rm swift-5.9-RELEASE-ubuntu22.04-aarch64.tar.gz

# Scala versions (mutually exclusive, require Java)
SCALA_2_13|Scala 2.13|scala-version|java-version|RUN apt-get update && apt-get install -y wget && wget https://downloads.lightbend.com/scala/2.13.12/scala-2.13.12.deb && dpkg -i scala-2.13.12.deb && rm scala-2.13.12.deb && apt-get install -f -y
SCALA_3|Scala 3|scala-version|java-version|RUN apt-get update && apt-get install -y wget unzip && cd /tmp && wget https://github.com/lampepfl/dotty/releases/download/3.3.1/scala3-3.3.1.zip && unzip scala3-3.3.1.zip && mv scala3-3.3.1 /opt/scala3 && rm scala3-3.3.1.zip && echo 'export PATH=$PATH:/opt/scala3/bin' >> /etc/profile.d/scala3.sh
