# Hook definition for project lifecycle events
id: project-lifecycle
name: Project Lifecycle Tracker
description: Tracks project creation, structure decisions, and major milestones
events:
  - PostToolUse
configuration:
  matcher: "Bash"
  hook:
    type: command
    command: "/home/devuser/.claude/hooks/project-lifecycle.sh"
script: |
  #!/bin/bash
  # Project lifecycle tracking hook
  
  # Read JSON input from stdin
  json_input=$(cat)
  
  # Extract command details
  command=$(echo "$json_input" | jq -r '.tool_input.command // ""')
  description=$(echo "$json_input" | jq -r '.tool_input.description // "No description"')
  success=$(echo "$json_input" | jq -r '.tool_response.success // false')
  
  # Only log successful commands
  if [ "$success" != "true" ]; then
    exit 0
  fi
  
  # Git repository initialization
  if [[ "$command" == "git init" ]]; then
    working_dir=$(pwd)
    echo "$(date -Iseconds) [INFO] Git repository initialized in $working_dir" >> ~/workspace/JOURNAL.md
  fi
  
  # GitHub repo creation
  if [[ "$command" =~ ^gh[[:space:]]repo[[:space:]]create ]]; then
    repo_name=$(echo "$command" | grep -oE 'create[[:space:]]+[^ ]+' | awk '{print $2}')
    if [[ -n "$repo_name" ]]; then
      echo "$(date -Iseconds) [MILESTONE] GitHub repo created: $repo_name" >> ~/workspace/JOURNAL.md
    fi
  fi
  
  # Branch creation/checkout
  if [[ "$command" =~ git[[:space:]]checkout[[:space:]]-b ]]; then
    branch_name=$(echo "$command" | grep -oE '\-b[[:space:]]+[^ ]+' | awk '{print $2}')
    echo "$(date -Iseconds) [INFO] Created feature branch: $branch_name" >> ~/workspace/JOURNAL.md
  fi
  
  # Git commits
  if [[ "$command" =~ ^git[[:space:]]commit ]]; then
    commit_msg=$(echo "$command" | grep -oE '"[^"]+"' | head -1 | tr -d '"')
    if [[ -n "$commit_msg" ]]; then
      echo "$(date -Iseconds) [MILESTONE] Committed: $commit_msg" >> ~/workspace/JOURNAL.md
    fi
  fi
  
  # PR creation
  if [[ "$command" =~ ^gh[[:space:]]pr[[:space:]]create ]]; then
    echo "$(date -Iseconds) [MILESTONE] Pull request created" >> ~/workspace/JOURNAL.md
  fi
  
  # Project structure creation
  if [[ "$command" =~ mkdir.*-p.*(src|tests|docs) ]]; then
    echo "$(date -Iseconds) [INFO] Project structure created" >> ~/workspace/JOURNAL.md
  fi
  
  # Environment setup
  if [[ "$command" =~ (python|node|cargo|go)[[:space:]]init ]] || [[ "$command" =~ npm[[:space:]]init ]]; then
    echo "$(date -Iseconds) [INFO] Development environment initialized" >> ~/workspace/JOURNAL.md
  fi
  
  # Dependency installation
  if [[ "$command" =~ ^(npm|pip|cargo|go|bundle)[[:space:]]install ]]; then
    echo "$(date -Iseconds) [INFO] Dependencies installed" >> ~/workspace/JOURNAL.md
  fi
  
  exit 0
