id: TYPESCRIPT
name: TypeScript (Latest)
group: typescript-version
requires: []
description: TypeScript - JavaScript with syntax for types
installation:
  dockerfile: |
    RUN npm install -g typescript ts-node @types/node && \
        echo "âœ“ TypeScript installed globally"
  test_command: tsc --version
entrypoint_setup: |
  # TypeScript specific setup
  echo "Setting up TypeScript environment..."
  
  # TypeScript is installed globally via npm, so just verify it's available
  if command -v tsc &> /dev/null; then
      echo "TypeScript compiler available at: $(which tsc)"
  fi
  
  if command -v ts-node &> /dev/null; then
      echo "ts-node available at: $(which ts-node)"
  fi
memory_content: |
  #### TypeScript
  
  **Quick Start**:
  - Initialize: `tsc --init` (creates tsconfig.json)
  - Compile: `tsc` or `tsc file.ts`
  - Watch mode: `tsc --watch`
  - Run directly: `ts-node script.ts`
  
  **Project Setup**:
  - Strict mode: Enable in tsconfig.json for better type safety
  - Source maps: `"sourceMap": true` for debugging
  - Output dir: `"outDir": "./dist"`
  - Root dir: `"rootDir": "./src"`
  
  **Common Commands**:
  - Check types only: `tsc --noEmit`
  - Build project: `tsc --build`
  - Clean: `tsc --build --clean`
  
  **With Node.js**:
  - Run TS directly: `ts-node src/app.ts`
  - REPL: `ts-node` (interactive TypeScript)
  - Scripts in package.json: `"start": "ts-node src/index.ts"`
  
  **Type packages**: Install @types/* for libraries, e.g., `npm i -D @types/express`
