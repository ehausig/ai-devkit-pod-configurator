id: JAVA_17_OPENJDK
name: Java 17 (OpenJDK)
group: java-version
requires: []
description: OpenJDK 17 - Open source Java implementation
installation:
  dockerfile: |
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y openjdk-17-jdk && \
        rm -rf /var/lib/apt/lists/*
  env:
    - JAVA_HOME=/usr/lib/jvm/java-17-openjdk-${TARGETARCH}
  test_command: java -version
entrypoint_setup: |
  # Java 17 OpenJDK specific setup
  echo "Setting up Java 17 environment..."
  
  # Set JAVA_HOME for the user
  if ! grep -q "JAVA_HOME" "$BASHRC" 2>/dev/null; then
      echo '' >> "$BASHRC"
      echo '# Java environment' >> "$BASHRC"
      echo 'export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-'$(dpkg --print-architecture) >> "$BASHRC"
      echo 'export PATH="$JAVA_HOME/bin:$PATH"' >> "$BASHRC"
  fi
memory_content: |
  #### Java 17 (OpenJDK)
  
  **Java 17 Features**:
  - Text blocks: `"""multi-line strings"""`
  - Records: `record Point(int x, int y) {}`
  - Pattern matching: `if (obj instanceof String s) { use s }`
  - Sealed classes: `sealed class Shape permits Circle, Rectangle`
  
  **Quick Run**: `java MyProgram.java` (single-file programs)
  
  **Spring Boot**:
  ```java
  @RestController
  public class ApiController {
      @GetMapping("/status")
      public Map<String, String> status() {
          return Map.of("status", "running", "java", "17");
      }
  }
  ```
  
  **Testing**: JUnit 5, AssertJ, TestContainers, MockWebServer
  
  **Performance**: G1GC default, records reduce boilerplate
