id: JAVA_17_OPENJDK
name: Java 17 (OpenJDK)
group: java-version
requires: []
description: OpenJDK 17 - Open source Java implementation
installation:
  dockerfile: |
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y openjdk-17-jdk && \
        rm -rf /var/lib/apt/lists/*
  env:
    - JAVA_HOME=/usr/lib/jvm/java-17-openjdk-${TARGETARCH}
  test_command: java -version
entrypoint_setup: |
  # Java 17 OpenJDK specific setup
  echo "Setting up Java 17 environment..."
  
  # Set JAVA_HOME for the user
  if ! grep -q "JAVA_HOME" "$BASHRC" 2>/dev/null; then
      echo '' >> "$BASHRC"
      echo '# Java environment' >> "$BASHRC"
      echo 'export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-'$(dpkg --print-architecture) >> "$BASHRC"
      echo 'export PATH="$JAVA_HOME/bin:$PATH"' >> "$BASHRC"
  fi
memory_content: |
  #### Java 17 (OpenJDK)
  
  **Environment**:
  - Java version: `java -version`
  - JAVA_HOME: Pre-configured at `/usr/lib/jvm/java-17-openjdk-${TARGETARCH}`
  
  **Modern Java Features**:
  - Text blocks: Use `"""` for multi-line strings
  - Records: `record Point(int x, int y) {}`
  - Pattern matching: Available for `instanceof`
  - Sealed classes: Control inheritance with `sealed` keyword
  
  **Running Java**:
  - Single-file programs: `java MyProgram.java` (no explicit compile needed)
  - With preview features: `java --enable-preview --source 17 MyProgram.java`
  
  **Unit Testing**:
  ```java
  // JUnit 5 example
  @Test
  void testMethod() {
      assertEquals(expected, actual);
  }
  
  // With AssertJ for fluent assertions
  assertThat(result)
      .isNotNull()
      .hasSize(3)
      .contains("expected");
  ```
  
  **Integration Testing**:
  - TestContainers for database/service testing
  - MockWebServer for API mocking
  - Spring Boot Test for full application testing
  
  **Spring Boot Development**:
  ```java
  @RestController
  @RequestMapping("/api")
  public class ApiController {
      @GetMapping("/status")
      public Map<String, String> status() {
          return Map.of("status", "running", "java", "17");
      }
  }
  ```
  
  **Common Compatibility Notes**:
  - Most libraries support Java 17
  - Spring Boot 2.5+ has full Java 17 support
  - Check third-party dependencies for compatibility
  
  **Performance Tips**:
  - Use G1GC (default) for balanced performance
  - Enable text blocks for cleaner SQL/JSON in code
  - Records reduce boilerplate significantly
