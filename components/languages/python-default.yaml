id: PYTHON_DEFAULT
name: Python 3.10 (Ubuntu Default)
group: python-version
requires: ""
description: Ubuntu's default Python 3 installation
installation:
  dockerfile: |
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y python3 python3-venv python3-pip python3-dev && \
        rm -rf /var/lib/apt/lists/* && \
        ln -sf /usr/bin/python3 /usr/bin/python
  test_command: python --version
entrypoint_setup: |
  # Python specific setup
  echo "Setting up Python environment..."
  
  # Configure pip for the devuser if proxy URL is provided
  if [ -n "$PIP_INDEX_URL" ]; then
      mkdir -p /home/devuser/.config/pip
      if [ ! -f /home/devuser/.config/pip/pip.conf ]; then
          echo "[global]" > /home/devuser/.config/pip/pip.conf
          echo "index-url = ${PIP_INDEX_URL}" >> /home/devuser/.config/pip/pip.conf
          echo "trusted-host = ${PIP_TRUSTED_HOST}" >> /home/devuser/.config/pip/pip.conf
          chown -R devuser:devuser /home/devuser/.config/pip
          echo "âœ“ Configured pip for devuser"
      fi
  fi
memory_content: |
  #### Python 3.10
  
  **Virtual Environments** (always use for projects):
  ```bash
  python -m venv .venv
  source .venv/bin/activate
  pip install -r requirements.txt
  deactivate
  ```
  
  **Testing**:
  ```python
  # pytest (recommended)
  pip install pytest pytest-cov
  pytest -v --cov=mypackage
  
  # unittest (built-in)
  python -m unittest discover
  ```
  
  **Development Tools**:
  - Format: `pip install black && black .`
  - Lint: `pip install ruff && ruff check .`
  - Type check: `pip install mypy && mypy .`
  - Debug: `python -m pdb script.py`
  
  **Common Commands**:
  - HTTP server: `python -m http.server 8000`
  - Install to user: `pip install --user package`
