id: JAVA_17_ADOPTIUM
name: Java 17 (Eclipse Adoptium)
group: java-version
requires: []
description: Eclipse Adoptium (formerly AdoptOpenJDK) Temurin 17
installation:
  dockerfile: |
    # Pass Nexus configuration to this build stage
    ARG USE_NEXUS_APT
    ARG NEXUS_APT_URL
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y wget apt-transport-https gnupg && \
        mkdir -p /etc/apt/keyrings && \
        wget -qO - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc > /dev/null && \
        if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then \
            echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] ${NEXUS_APT_URL}/repository/adoptium-apt-proxy $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; \
        else \
            echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; \
        fi && \
        apt-get update && \
        apt-get install -y temurin-17-jdk && \
        rm -rf /var/lib/apt/lists/*
  env:
    - JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-${TARGETARCH}
  test_command: java -version
entrypoint_setup: |
  # Java 17 Adoptium specific setup
  echo "Setting up Java 17 Adoptium environment..."
  
  # Set JAVA_HOME for the user
  if ! grep -q "JAVA_HOME" "$BASHRC" 2>/dev/null; then
      echo '' >> "$BASHRC"
      echo '# Java environment' >> "$BASHRC"
      echo 'export JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-'$(dpkg --print-architecture) >> "$BASHRC"
      echo 'export PATH="$JAVA_HOME/bin:$PATH"' >> "$BASHRC"
  fi
memory_content: |
  #### Java 17 (Eclipse Adoptium Temurin)
  
  **Why Adoptium**: TCK tested, regular updates, drop-in Oracle JDK replacement
  
  **Java 17 LTS Features**:
  - Records: `record Person(String name, int age) {}`
  - Pattern matching: `if (obj instanceof String s) { /* use s */ }`
  - Text blocks: `"""multi-line"""`
  - Sealed classes
  
  **Testing**:
  ```java
  @ParameterizedTest
  @ValueSource(strings = {"hello", "world"})
  void testWithParams(String value) {
      assertNotNull(value);
  }
  ```
  
  **Microservices**: Spring Boot 2.5+ has full Java 17 support
  
  **Performance**: Use ZGC for low latency: `-XX:+UseZGC`
