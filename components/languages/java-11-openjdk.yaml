id: JAVA_11_OPENJDK
name: Java 11 (OpenJDK)
group: java-version
requires: []
description: OpenJDK 11 - Open source Java implementation
installation:
  dockerfile: |
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y openjdk-11-jdk && \
        rm -rf /var/lib/apt/lists/*
  env:
    - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-${TARGETARCH}
  test_command: java -version
entrypoint_setup: |
  # Java 11 OpenJDK specific setup
  echo "Setting up Java 11 environment..."
  
  # Set JAVA_HOME for the user
  if ! grep -q "JAVA_HOME" "$BASHRC" 2>/dev/null; then
      echo '' >> "$BASHRC"
      echo '# Java environment' >> "$BASHRC"
      echo 'export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-'$(dpkg --print-architecture) >> "$BASHRC"
      echo 'export PATH="$JAVA_HOME/bin:$PATH"' >> "$BASHRC"
  fi
memory_content: |
  #### Java 11 (OpenJDK)
  
  **Java 11 Features**:
  - Local var inference: `var list = new ArrayList<String>();`
  - HTTP Client API: Built-in `java.net.http`
  - Single-file: `java HelloWorld.java` (no javac needed)
  - String methods: `isBlank()`, `lines()`, `repeat(n)`
  
  **HTTP Client**:
  ```java
  var client = HttpClient.newHttpClient();
  var request = HttpRequest.newBuilder()
      .uri(URI.create("https://api.example.com"))
      .build();
  var response = client.send(request, HttpResponse.BodyHandlers.ofString());
  ```
  
  **Testing**: Use JUnit 5 with Maven/Gradle
  
  **Note**: LTS support ends 2026. Consider Java 17/21 for new projects.
