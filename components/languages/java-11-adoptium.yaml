id: JAVA_11_ADOPTIUM
name: Java 11 (Eclipse Adoptium)
group: java-version
requires: []
description: Eclipse Adoptium (formerly AdoptOpenJDK) Temurin 11
installation:
  dockerfile: |
    # Pass Nexus configuration to this build stage
    ARG USE_NEXUS_APT
    ARG NEXUS_APT_URL
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y wget apt-transport-https gnupg && \
        mkdir -p /etc/apt/keyrings && \
        wget -qO - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc > /dev/null && \
        if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then \
            echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] ${NEXUS_APT_URL}/repository/adoptium-apt-proxy $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; \
        else \
            echo "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list; \
        fi && \
        apt-get update && \
        apt-get install -y temurin-11-jdk && \
        rm -rf /var/lib/apt/lists/*
  env:
    - JAVA_HOME=/usr/lib/jvm/temurin-11-jdk-${TARGETARCH}
  test_command: java -version
entrypoint_setup: |
  # Java 11 Adoptium specific setup
  echo "Setting up Java 11 Adoptium environment..."
  
  # Set JAVA_HOME for the user
  if ! grep -q "JAVA_HOME" "$BASHRC" 2>/dev/null; then
      echo '' >> "$BASHRC"
      echo '# Java environment' >> "$BASHRC"
      echo 'export JAVA_HOME=/usr/lib/jvm/temurin-11-jdk-'$(dpkg --print-architecture) >> "$BASHRC"
      echo 'export PATH="$JAVA_HOME/bin:$PATH"' >> "$BASHRC"
  fi
memory_content: |
  #### Java 11 (Eclipse Adoptium Temurin)
  
  **Why Adoptium**: Production-ready, TCK-tested, regular updates
  
  **HTTP Client (Java 11)**:
  ```java
  var client = HttpClient.newBuilder()
      .connectTimeout(Duration.ofSeconds(10))
      .build();
      
  client.sendAsync(request, HttpResponse.BodyHandlers.ofString())
      .thenApply(HttpResponse::body)
      .thenAccept(System.out::println);
  ```
  
  **Testing**: JUnit 4/5, Mockito, AssertJ, Spring Boot Test
  
  **Enterprise**: Spring Boot 2.x, older apps often require Java 11
  
  **Performance**: G1GC default, use `-XX:+UseStringDeduplication`
