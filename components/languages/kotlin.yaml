id: KOTLIN
name: Kotlin
group: kotlin-version
requires: java-version
description: Modern programming language for JVM and Android development
version: "1.9.22"
installation:
  dockerfile: |
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y zip unzip && \
        rm -rf /var/lib/apt/lists/* && \
        cd /tmp && \
        wget https://github.com/JetBrains/kotlin/releases/download/v1.9.22/kotlin-compiler-1.9.22.zip && \
        unzip kotlin-compiler-1.9.22.zip && \
        mv kotlinc /opt/kotlin && \
        rm kotlin-compiler-1.9.22.zip && \
        echo 'export PATH=/opt/kotlin/bin:$PATH' >> /etc/profile.d/kotlin.sh
  test_command: kotlinc -version
entrypoint_setup: |
  # Kotlin specific setup
  echo "Setting up Kotlin environment..."
  
  # Add Kotlin to PATH if not already present
  if ! grep -q "/opt/kotlin/bin" "$BASHRC" 2>/dev/null; then
      echo '' >> "$BASHRC"
      echo '# Kotlin environment' >> "$BASHRC"
      echo 'export PATH="/opt/kotlin/bin:$PATH"' >> "$BASHRC"
  fi
memory_content: |
  #### Kotlin
  
  **Quick Start**:
  - REPL: `kotlinc`
  - Run script: `kotlin script.kts`
  - Compile: `kotlinc Hello.kt -include-runtime -d hello.jar`
  
  **Features**:
  - Null safety: `var name: String? = null`
  - Data classes: `data class Person(val name: String)`
  - Extension functions: `fun String.lastChar() = this[length - 1]`
  
  **Testing**:
  ```kotlin
  import kotlin.test.*
  
  class MyTest {
      @Test
      fun testExample() {
          assertTrue { 1 + 1 == 2 }
      }
  }
  ```
  
  **Ktor API**:
  ```kotlin
  embeddedServer(Netty, port = 8080) {
      routing {
          get("/") { call.respondText("Hello") }
      }
  }.start(wait = true)
  ```
  
  **Build**: Use Gradle for dependencies (see Gradle section)
