id: SCALA_2_13
name: Scala 2.13
group: scala-version
requires: java-version
description: Scala 2.13 - Object-oriented and functional programming language
version: "2.13.12"
installation:
  dockerfile: |
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt-get update && \
        apt-get install -y wget && \
        wget https://downloads.lightbend.com/scala/2.13.12/scala-2.13.12.deb && \
        dpkg -i scala-2.13.12.deb && \
        rm scala-2.13.12.deb && \
        apt-get install -f -y && \
        rm -rf /var/lib/apt/lists/*
  test_command: scala -version
entrypoint_setup: |
  # Scala 2.13 specific setup
  echo "Setting up Scala 2.13 environment..."
  
  # Add Scala to PATH if not already present
  if ! grep -q "/usr/share/scala/bin" "$BASHRC" 2>/dev/null; then
      echo '' >> "$BASHRC"
      echo '# Scala environment' >> "$BASHRC"
      echo 'export PATH="/usr/share/scala/bin:$PATH"' >> "$BASHRC"
  fi
memory_content: |
  #### Scala 2.13
  
  **REPL**: `scala` → Run scripts: `scala script.scala`
  
  **Testing**:
  ```scala
  // ScalaTest
  class MySpec extends AnyFlatSpec with Matchers {
    "Stack" should "pop values in LIFO order" in {
      stack.pop() should be (2)
    }
  }
  ```
  
  **Common Libraries**:
  - Cats: `"org.typelevel" %% "cats-core" % "2.10.0"`
  - Akka HTTP: `"com.typesafe.akka" %% "akka-http" % "10.5.0"`
  - Http4s: `"org.http4s" %% "http4s-dsl" % "0.23.23"`
  
  **Key Points**:
  - Use `%%` for Scala libs (cross-compilation)
  - Binary compatibility matters (2.13 ≠ 2.12)
  - Test continuously: `sbt ~test`
  
  **Build**: Use SBT for dependency management
