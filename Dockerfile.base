FROM ubuntu:22.04

# Set architecture (defaults to arm64 for Apple Silicon)
ARG TARGETARCH=arm64

# Build arguments for package manager proxies (optional)
ARG PIP_INDEX_URL=""
ARG PIP_TRUSTED_HOST=""
ARG NPM_REGISTRY=""
ARG GOPROXY=""
ARG USE_NEXUS_APT=""
ARG NEXUS_APT_URL=""

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV TARGETARCH=${TARGETARCH}

# Configure APT to use Nexus if enabled
RUN if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then \
        echo "Configuring APT to use Nexus proxy..." && \
        # Set APT proxy \
        echo "Acquire::http::Proxy \"${NEXUS_APT_URL}/\";" > /etc/apt/apt.conf.d/00proxy && \
        # Configure APT sources to use Nexus repositories \
        echo "deb ${NEXUS_APT_URL}/repository/ubuntu-main/ jammy main restricted universe multiverse" > /etc/apt/sources.list && \
        echo "deb ${NEXUS_APT_URL}/repository/ubuntu-security/ jammy-security main restricted universe multiverse" >> /etc/apt/sources.list && \
        echo "deb ${NEXUS_APT_URL}/repository/ubuntu-updates/ jammy-updates main restricted universe multiverse" >> /etc/apt/sources.list && \
        echo "✓ Configured APT to use Nexus proxy" ; \
    fi

# Configure package managers if proxy URLs are provided
RUN if [ -n "$PIP_INDEX_URL" ]; then \
        mkdir -p /etc/pip && \
        echo "[global]" > /etc/pip/pip.conf && \
        echo "index-url = ${PIP_INDEX_URL}" >> /etc/pip/pip.conf && \
        echo "trusted-host = ${PIP_TRUSTED_HOST}" >> /etc/pip/pip.conf && \
        echo "✓ Configured pip to use proxy" ; \
    fi

# Install base dependencies (minimal set)
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    gnupg \
    lsb-release \
    git \
    python3 \
    python3-pip \
    vim \
    jq \
    wget \
    bash-completion \
    build-essential \
    pkg-config \
    libssl-dev \
    unzip \
    xz-utils \
    tree \
    --no-install-recommends \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install GitHub CLI (gh) - handle both proxy and non-proxy scenarios
RUN if [ -n "$USE_NEXUS_APT" ] && [ -n "$NEXUS_APT_URL" ]; then \
        # When using Nexus, try to install from Ubuntu universe repo instead \
        apt-get update && apt-get install -y gh || \
        # If that fails, download the binary directly \
        (ARCH=$(dpkg --print-architecture) && \
         GH_VERSION="2.40.1" && \
         wget -q "https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_linux_${ARCH}.deb" && \
         dpkg -i "gh_${GH_VERSION}_linux_${ARCH}.deb" && \
         rm "gh_${GH_VERSION}_linux_${ARCH}.deb") || \
        echo "Warning: GitHub CLI installation failed"; \
    else \
        # Standard installation when not using proxy \
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg && \
        chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg && \
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null && \
        apt-get update && \
        apt-get install -y gh; \
    fi && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create a non-root user to run development tools
RUN useradd -ms /bin/bash devuser
RUN mkdir -p /home/devuser/.config/claude-code
RUN mkdir -p /home/devuser/workspace
RUN mkdir -p /home/devuser/.claude
RUN chown -R devuser:devuser /home/devuser/

# Set up user's PATH to include .local/bin
RUN echo 'export PATH="$HOME/.local/bin:$PATH"' >> /home/devuser/.bashrc

# Configure pip for the devuser if proxy URL is provided
RUN if [ -n "$PIP_INDEX_URL" ]; then \
        mkdir -p /home/devuser/.config/pip && \
        echo "[global]" > /home/devuser/.config/pip/pip.conf && \
        echo "index-url = ${PIP_INDEX_URL}" >> /home/devuser/.config/pip/pip.conf && \
        echo "trusted-host = ${PIP_TRUSTED_HOST}" >> /home/devuser/.config/pip/pip.conf && \
        chown -R devuser:devuser /home/devuser/.config/pip && \
        echo "✓ Configured pip for devuser" ; \
    fi

# LANGUAGE_INSTALLATIONS_PLACEHOLDER

# Pass Nexus configuration to language installations
ARG USE_NEXUS_APT
ARG NEXUS_APT_URL

# Copy entrypoint script
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Copy git setup script for user convenience
COPY setup-git.sh /usr/local/bin/setup-git.sh
RUN chmod +x /usr/local/bin/setup-git.sh

# Set environment variables for runtime if proxies are configured
ENV PIP_INDEX_URL=${PIP_INDEX_URL}
ENV PIP_TRUSTED_HOST=${PIP_TRUSTED_HOST}
ENV NPM_CONFIG_REGISTRY=${NPM_REGISTRY}
ENV GOPROXY=${GOPROXY}

# Switch to the devuser for runtime (but not for entrypoint)
USER devuser
WORKDIR /home/devuser

# Switch back to root for the entrypoint
USER root
ENTRYPOINT ["/entrypoint.sh"]

# Set up volume mount points for persistence - MUST be last!
VOLUME ["/home/devuser/.config/claude-code", "/home/devuser/workspace"]
